services:
  db:
    image: mongo:latest
    container_name: mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: symph
      MONGO_INITDB_ROOT_PASSWORD: symph
    healthcheck:
      test: ["CMD-SHELL", "mongo --eval 'db.admin.command(\"ping\")'"]
      interval: 5s
      timeout: 5s
      retries: 5

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_URL: mongodb://symph:symph@mongodb:27017
      ME_CONFIG_BASICAUTH_ENABLED: true
      ME_CONFIG_BASICAUTH_USERNAME: mongoexpressuser
      ME_CONFIG_BASICAUTH_PASSWORD: mongoexpresspass
    depends_on:
      db:
        condition: service_started

  backend:
    container_name: dev-api
    build:
      context: ./backend-node
      dockerfile: Dockerfile
      target: dev
    restart: unless-stopped
    depends_on:
      db:
        condition: service_started
      redis:
        condition: service_started
    env_file:
      - .env
    ports:
      - 8000:8000
    environment:
      - PORT=8000
      - MONGO_URI=mongodb://symph:symph@mongodb:27017
      - MONGO_DB=urlshortener
      - REDIS_URL=redis:6379
      - JWT_SECRET_KEY=averysecureandlongsecretkeywhichshouldbestoredinenv
    volumes:
      - ./backend-node/src:/app/src

  frontend:
    container_name: dev-frontend
    restart: unless-stopped
    depends_on:
      - backend
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: dev
    ports:
      - 3000:3000
    volumes:
      - ./frontend/src:/app/src/
      - ./frontend/public:/app/public
    env_file: .env

  redis:
    image: redis:alpine
    container_name: redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data

          
volumes:
  mongodb_data:
    driver: local
  redis-data:
    driver: local
